name: Release Image

on:
  workflow_dispatch:
    inputs:
      major:
        description: 'Major'
        required: true
        default: '0'
      minor:
        description: 'Minor'
        required: true
        default: '0'
      patch:
        description: 'Patch'
        required: true
        default: '0'

env:
  VERSION_MAJOR: ${{ github.event.inputs.major }}
  VERSION_MINOR: ${{ github.event.inputs.minor }}
  VERSION_PATCH: ${{ github.event.inputs.patch }}

jobs:
  build-image:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: "17"
          distribution: adopt
      - name: Build with Maven
        run: cd libs/ && mvn -U --batch-mode package && cd ../
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to ghcr.io
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Version
        run: |
          TS=$(date +%s)
          echo "VERSION_TS=$TS" >> $GITHUB_ENV
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ghcr.io/coduction/keycloak:latest
            ghcr.io/coduction/keycloak:${{ env.VERSION_MAJOR }}
            ghcr.io/coduction/keycloak:${{ env.VERSION_MAJOR }}.${{ env.VERSION_MINOR }}
            ghcr.io/coduction/keycloak:${{ env.VERSION_MAJOR }}.${{ env.VERSION_MINOR }}.${{ env.VERSION_PATCH }}
            ghcr.io/coduction/keycloak:${{ env.VERSION_MAJOR }}.${{ env.VERSION_MINOR }}.${{ env.VERSION_PATCH }}.${{ env.VERSION_TS }}
      - name: Update Coduction SSO
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ vars.CODUCTION_TESTING_HOST }}
          username: ${{ vars.CODUCTION_TESTING_USER }}
          key: ${{ secrets.CODUCTION_TESTING_SSH_KEY }}
          passphrase: ${{ secrets.CODUCTION_TESTING_SSH_KEY_PASS }}
          script: /home/${{ vars.CODUCTION_TESTING_USER }}/scripts/deploy/sso.sh
